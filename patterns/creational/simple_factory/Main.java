package patterns.creational.simple_factory;

import patterns.creational.simple_factory.concrete_factory.SimplePizzaFactory;
import patterns.creational.simple_factory.concrete_сlient.PizzaStore;

/* Все фабричные паттерны:
 *      - инкапсулируют создание экземпляров
 *      - обеспечивают слабую связанность за счет сокращения зависимости приложения от конкретных
 *      классов */


/* ФАБРИКА: инкапсулирует механизм создания объектов-продуктов от клиентов, которые их используют
 * - является часто используемой идиомой программирования, а не паттерном
 * - является упрощенной версией Фабричного Метода
 * - является единственным местом в коде, которое имеет дело с конкретными продуктами */


/* СУТЬ РЕАЛИЗАЦИИ
 * - клиент фабрики: запрашивает конкретный продукт у фабрики, чтобы с ним работать
 *      - например, "пиццерия"
 *      - должен знать, к какой фабрике обратиться за нужным продуктом
 *          - нужная фабрика может передаваться в конструктор данного клиента
 *      - получает нужный продукт как абстракцию продукта и работает с ним
 *
 * - абстракция продукта: то, что требует клиент от фабрики и с чем он работает
 *      - например, интерфейс "пицца"
 *
 * - конкретный продукт: то, что создает фабрика и возвращается клиенту в виде ссылки на абстрактный
 * продукт, который он запрашивал
 *      - например, "вегетарианская пицца"
 *
 * - конкретная фабрика: имеет единственный метод, который реализует механизм создания разных
 * объектов-продуктов, но возвращает их по ссылке на абстрактный продукт
 *      - (опционально) в метод может передаваться ключ для выбора нужного для создания объекта
 *      - (опционально) метод может быть статическим, чтобы не нужно было создавать экземпляр
 *      фабрики, но тогда нельзя будет субклассировать класс, чтобы изменить поведение метода */


public class Main {
    public static void main(String[] args) {
        PizzaStore pizzaStore = new PizzaStore(new SimplePizzaFactory()); // создается клиент с фабрикой
        pizzaStore.orderPizza("veggie"); // у клиента заказывается продукт, который ему подготит фабрика
    }
}